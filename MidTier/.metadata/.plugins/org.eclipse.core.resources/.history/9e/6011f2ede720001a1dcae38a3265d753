package com.cognizant.stockservice.controller;

import java.io.IOException;
import java.sql.Time;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

import org.apache.poi.ss.usermodel.DataFormatter;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.cognizant.stockservice.bean.StockPrice;
import com.cognizant.stockservice.repository.StockExchangeRepository;
import com.cognizant.stockservice.repository.StockPriceRepository;

@RestController
@RequestMapping("/import")
public class StockController {

	@Autowired
	StockPriceRepository stockPriceRepository;
	@Autowired
	StockExchangeRepository stockExchangeRepository;

	@SuppressWarnings("deprecation")
	@PostMapping("/import")
	public void mapReapExcelDatatoDB(@RequestParam("file") MultipartFile reapExcelDataFile)
			throws IOException, ParseException {
		System.out.println("hai");

		DataFormatter formatter = new DataFormatter();
//			List<StockPrice> tempStudentList = new ArrayList();
		XSSFWorkbook workbook = new XSSFWorkbook(reapExcelDataFile.getInputStream());
		XSSFSheet worksheet = workbook.getSheetAt(0);
		System.out.println(workbook);

		for (int i = 1; i < worksheet.getPhysicalNumberOfRows(); i++) {
			StockPrice stockPrice = new StockPrice();

			XSSFRow row = worksheet.getRow(i);
			System.out.println("no of" + worksheet.getPhysicalNumberOfRows());
			System.out.println(row.getCell(2).getNumericCellValue());
			stockPrice.setCompanyCode(formatter.formatCellValue(row.getCell(0)));
			stockPrice.setCurrentPrice((float) row.getCell(2).getNumericCellValue());
			String stockExchange = formatter.formatCellValue(row.getCell(1));

			stockPrice.setStockExchange(stockExchangeRepository.findByStockExchange(stockExchange));
			stockPrice.setDate(row.getCell(3).getDateCellValue());
			DateFormat timeFormat = new SimpleDateFormat("hh:mm:ss");
			Date date = timeFormat.parse(formatter.formatCellValue(row.getCell(4)));
			Time time = new Time(date.getHours(), date.getMinutes(), date.getSeconds());
			stockPrice.setTime(time);

			System.out.println(stockPrice);

			stockPriceRepository.save(stockPrice);

		}
	}
}
